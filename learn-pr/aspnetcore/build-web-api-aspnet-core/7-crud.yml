### YamlMime:ModuleUnit
uid: learn.build-web-api-net-core.7-crud
metadata:
  title: CRUD actions in ASP.NET Core
  description: Learn how ASP.NET core has built-in support for CRUD actions in web APIs.
  ms.date: 01/17/2024
  author: jongalloway
  ms.author: jogallow
  ms.topic: unit
title: CRUD actions in ASP.NET Core
durationInMinutes: 5
content: |
  [!include[](includes/7-crud.md)]
quiz:
  title: Check your knowledge
  questions:
    - content: "Suppose you need to update a product's name. Which HTTP action verb is the best fit for this request?"
      choices:
      - content: "`POST`"
        isCorrect: false
        explanation: "The `POST` verb is intended for use in creating a new product."
      - content: "`PUT`"
        isCorrect: true
        explanation: "The `PUT` verb is intended for use in modifying an existing product. Additionally, `PATCH` can be used to update individual properties."
      - content: "`DELETE`"
        isCorrect: false
        explanation: "The `DELETE` verb is intended for use in removing a product."
    - content: "In which scenario is it most appropriate to return an HTTP 404 status code, and how is it accomplished in ASP.NET Core?"
      choices:
      - content: "The product was successfully updated in the database. Call the `BadRequest` method to generate a 404."
        isCorrect: false
        explanation: "When a product is successfully updated, a 204 should be returned. Use the `NoContent` method."
      - content: "Model validation has failed because the action's required parameters are missing. Call the `BadRequest` method to generate a 404."
        isCorrect: false
        explanation: "When model validation fails, an HTTP 400 status code is returned. If the controller is annotated with the `[ApiController]` attribute, there's no need to explicitly call `BadRequest`."
      - content: "After a request for a product by ID, a match doesn't exist in the underlying data store. Call the `NotFound` method to generate a 404."
        isCorrect: true
        explanation: "The `NotFound` method generates an HTTP 404 status code in the response. Using this status code is best way to communicate that the requested data doesn't exist."