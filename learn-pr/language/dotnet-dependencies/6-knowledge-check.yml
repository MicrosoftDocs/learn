### YamlMime:ModuleUnit
uid: learn.dotnet-dependencies.6-knowledge-check
title: Module assessment
metadata:
  title: Module assessment
  description: Knowledge check
  ms.date: 10/16/2024
  author: jamesmontemagno
  ms.author: jamont
  ms.manager: markl
  ms.topic: unit
durationInMinutes: 1
content: |
  [!include[](includes/6-knowledge-check.md)]
quiz: 
  title: "Check your knowledge"
  questions:
    - content: "How would you install a framework like Humanizer?"
      choices:
        - content: "Run `dotnet add Humanizer`"
          isCorrect: false
          explanation: "When you're using the `add` command, you must specify that you want to install a `package` before specifying the name."
        - content: "Run `dotnet add package Humanizer`"
          isCorrect: true
          explanation: "This command adds the most recent version of the package to your project. You can also specify the version by using the `--version=<version>` parameter."
        - content: "Run `dotnet install Humanizer`"
          isCorrect: false
          explanation: "There's no `install` command. Use `add package`."
        - content: "Run `dotnet download package Humanizer`"
          isCorrect: false
          explanation: "There's no `download` command. Use `add package`."
    - content: "What version change would signify a minor version when a package uses semantic versioning?"
      choices:
        - content: "1.1.1 changes to 1.2.0"
          isCorrect: true
          explanation: "The middle number represents the minor version. A change to this number means that features were added. Your code should still work."
        - content: "1.0.1 changes to 1.0.2"
          isCorrect: false
          explanation: "The third number is the patch version. A change to this number means that a change was applied that fixes something in the code that was working."
        - content: "1.0.0 changes to 2.0.0"
          isCorrect: false
          explanation: "The first number is the major version. A change to this number means that you can expect 'breaking changes' in your code."
    - content: "How do you configure a project file so that you get only patch (bug fix) updates?"
      choices:
        - content: "Locate the entry in the project file and set the entry to look like this one: `<PackageReference Include=\"<package>\" Version=\"*\"/>`"
          isCorrect: false
          explanation: "This code always updates the dependency to the latest possible version."
        - content: "Locate the entry in the project file and set the entry to look like this one: `<PackageReference Include=\"<package>\" Version=\"2.*\"/>`"
          isCorrect: false
          explanation: "This code always updates the dependency to the latest minor version."
        - content: "Locate the entry in the project file and set the entry to look like this one: `<PackageReference Include=\"<package>\" Version=\"2.7.*\"/>`"
          isCorrect: true
          explanation: "Setting the third value in the version to an asterisk ensures that the library always uses the latest patch version."
        - content: "Locate the entry in the project file and set the entry to look like this one: `<PackageReference Include=\"<package>\" Version=\"[6,7)\"/>`"
          isCorrect: false
          explanation: "This code always updates to the latest version where the major number is 6."
    - content: "How would you check if a new version of a framework is available?"
      choices:
        - content: "Run `dotnet list outdated`"
          isCorrect: false
          explanation: "`outdated` isn't a command. It's an option and is passed in via `--outdated`. You must specify the command `package` before passing in the option."
        - content: "Run `dotnet list package outdated`"
          isCorrect: false
          explanation: "`outdated` isn't a command. To check for outdated packages, you must pass in `--outdated` as  an option."
        - content: "Run `dotnet list --outdated`"
          isCorrect: false
          explanation: "When you're using the `list` command, you must specify that you want to install a `package` before specifying the name."
        - content: "Run `dotnet list package --outdated`"
          isCorrect: true
          explanation: "You can also pass in `--include-prerelease` to check for new prerelease versions of the dependencies."
