### YamlMime:Module
uid: learn.language.rust-generic-types-traits
metadata:
  title: Implement generic types and traits
  description: "Understand what generic types and traits are and how to use them in Rust."
  ms.date: 12/06/2022
  author: meaghanlewis
  ms.author: chnoring
  ms.topic: interactive-tutorial
  ms.custom: team=nextgen
  ms.devlang: rust
title: Implement generic types and traits
summary: "Understand what generic types and traits are and how to use them in Rust."
abstract:  |
  In this module, you'll learn:
  - What generic types are and how "wrapper" types use them.
  - What traits are and how they help us define shared behavior.
  - How to implement an existing trait for a custom type.
  - How to implement a custom trait for an existing type.
  - How trait bounds help us write generic functions.
  - How to implement an *Iterator* trait to iterate through collections.
prerequisites: | 
  - A solid understanding of Rust's types, ownerships, and moves. If you have any questions about those subjects, review the module *Understand how Rust manages memory*.
iconUrl: /training/achievements/rust-generic-types-traits.svg 
levels:
- beginner
roles:
- developer
- student
products:
- azure
units:
- learn.language.rust-generic-types-traits.0-introduction
- learn.language.rust-generic-types-traits.1-what-are-generic-data-types
- learn.language.rust-generic-types-traits.2-define-shared-behavior-with-traits
- learn.language.rust-generic-types-traits.3-derive
- learn.language.rust-generic-types-traits.4-trait-bounds
- learn.language.rust-generic-types-traits.5-iterators
- learn.language.rust-generic-types-traits.6-exercise-implement-generic-type
- learn.language.rust-generic-types-traits.7-exercise-implement-iterator
- learn.language.rust-generic-types-traits.8-knowledge-check
- learn.language.rust-generic-types-traits.9-summary
badge:
  uid: learn.language.rust-generic-types-traits.badge
