### YamlMime:ModuleUnit
uid: learn.introduction-to-polyglot-notebooks.knowledge-check
metadata:
  title: Module assessment
  description: Check your understanding.
  author: japhletnwamu
  ms.author: japhletnwamu
  ms.date: 08/28/2024
  ms.topic: unit
  ms.collection:
    - ce-advocates-ai-copilot
  ms.custom: team=nextgen
title: Module assessment
durationInMinutes: 3
content: |
  Choose the best response for each question.
quiz: 
  questions: 
    - content: Why use Polyglot Notebooks?
      choices:
      - content: Support for multiple languages within a single notebook. 
        isCorrect: true
        explanation: Correct. Polyglot Notebooks allows for usage of several languages like for example C# and JavaScript and more within a single notebook.
      - content: To build an app.
        isCorrect: false
        explanation: Incorrect. Although it's possible to use Polyglot Notebooks to build an app, you get more out of it if you want to do so in the context of a Notebook.
      - content: To query a database.
        isCorrect: false
        explanation: Incorrect. Polyglot Notebooks can query a database, but its primary usage is to run code within the context of a Notebook that might use different languages per cell, and you want to mix and match calling frontend, backend, and data sources.
    - content: What's the best approach to share values?
      choices:
      - content: Use the `#!share` magic command.
        isCorrect: false
        explanation: Incorrect. Although you can use this command, it's more idiomatically correct to use `#!set`.
      - content: Use the `#!set` command.
        isCorrect: true
        explanation: Correct. The `#!set` command is the correct one to use if you want to share values.
      - content: You can't share values.
        isCorrect: false
        explanation: Incorrect. You can definitely share values.
    - content: How can you ask the user for input in the context of magic commands in a Polyglot Notebook?
      choices:
      - content: You can't.
        isCorrect: false
        explanation: Incorrect. You can ask for input by using the `@input` command.
      - content: You call `Kernel.GetInputAsync("Some prompt text.")`.
        isCorrect: false
        explanation: Incorrect. This is the correct way to ask for input in code, but not in the context of magic commands.
      - content: You call the `@input` command.
        isCorrect: true
        explanation: Correct.
    
