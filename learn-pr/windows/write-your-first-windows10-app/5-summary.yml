### YamlMime:ModuleUnit
title: Summary
uid: learn-windows.writing-windows-10-apps.5-summary
metadata:
  title: Summary and knowledge check
  description: This knowledge check tests your knowledge of the platforms and features you used in this module.
  ms.date: 12/10/2018
  author: alvinashcraft
  ms.author: aashcraft
  ms.topic: interactive-tutorial
  ms.prod: learning-windows
  
durationInMinutes: 5
content: |
    [!include[](includes/5-summary.md)]
quiz:
    title: Knowledge check
    questions:
    - content: What platform should you use to write Windows apps?
      choices:
      - content: UWP
        explanation: UWP is best if you want to write apps using Windows features and target other platforms like Xbox and HoloLens.
        isCorrect: false
      - content: WPF
        explanation: WPF is best if you're making a complex app that targets Windows and want to share library code with other .NET apps.
        isCorrect: false
      - content: Windows Forms
        explanation: Windows Forms is best if you're writing a simple tool or utility that doesn't require anything fancy.
        isCorrect: false
      - content: Whichever one you want!
        explanation: Each platform has their strengths and weaknesses. Choose the one that works best for you!
        isCorrect: true
    - content: What's the difference between writing a UWP app and writing a WPF app?
      choices:
      - content: WPF apps don't use XAML.
        explanation: False. Windows Forms apps don't use XAML, but both UWP and WPF do.
        isCorrect: false
      - content: Events are handled differently in the two types of apps.
        explanation: UWP and WPF don't necessarily affect how you handle events. They're platforms, not programming languages.
        isCorrect: false
      - content: UWP apps have access to their own runtime APIs and don't necessarily use .NET.
        explanation: Correct! The sample apps here are similar because they both use C# and XAML. But you might notice that the XAML controls are slightly different.
        isCorrect: true
    - content: What is Template Studio useful for?
      choices:
      - content: Template Studio creates a new UWP, WPF, or Windows Forms app that has the basic features and structure that you want.
        explanation: Template Studio handles all the generic work for implementing your app's structure, letting you focus on the functionality that makes it unique.
        isCorrect: true
      - content: Template Studio helps you set up the XAML for your UWP or WPF app.
        explanation: Template Studio doesn't provide only the XAML markup, it provides a complete project, including C# code.
        isCorrect: false
      - content: Template Studio makes it easy to add new features to your existing app.
        explanation: Template Studio works only for creating new apps or with existing projects that were created with Template Studio.
        isCorrect: false
