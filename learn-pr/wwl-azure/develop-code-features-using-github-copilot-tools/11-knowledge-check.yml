### YamlMime:ModuleUnit
uid: learn.wwl.develop-code-features-using-github-copilot-tools.knowledge-check
title: Module assessment
metadata:
  title: Module assessment
  description: "Knowledge check"
  ms.date: 12/09/2024
  author: wwlpublish
  ms.author: cahowd
  ms.topic: unit
  ms.custom:
  - N/A
durationInMinutes: 8
quiz:
  title: "Check your knowledge"
  questions:
  - content: "What is a recommended practice to improve the performance of GitHub Copilot Chat?"
    choices:
    - content: "Limiting the prompt to coding questions or tasks to enhance the model's output quality."
      isCorrect: true
      explanation: "Correct. Keeping prompts on topic can help improve the quality of the output generated by GitHub Copilot Chat."
    - content: "Using Copilot Chat as a replacement for human programming."
      isCorrect: false
      explanation: "Incorrect. Developers should use Copilot Chat as a tool, not a replacement for human programming."
    - content: "Ignoring secure coding and code review practices."
      isCorrect: false
      explanation: "Incorrect. Developers should follow secure coding and code review practices when using Copilot Chat."
  - content: "What is the best way to provide context to GitHub Copilot for better code suggestions?"
    choices:
    - content: "By keeping all files closed in the editor."
      isCorrect: false
      explanation: "Incorrect. Having related files open in the editor helps Copilot analyze the context and create appropriate suggestions."
    - content: "By using complex function names."
      isCorrect: false
      explanation: "Incorrect. Complex function names can be confusing. Meaningful function names and well-scoped function comments provide better context."
    - content: "By providing meaningful function names, specific function comments, and having related files open in the editor."
      isCorrect: true
      explanation: "Correct. These methods help Copilot understand the context of the task and generate appropriate suggestions."
  - content: "How can a developer optimize their experience when interacting with GitHub Copilot via chat?"
    choices:
    - content: "By being vague about the inputs, outputs, APIs, or frameworks they want to use."
      isCorrect: false
      explanation: "Incorrect. The more specific your prompt, the better the outcome."
    - content: "By using chat participants, slash commands, chat variables, and being specific in your prompts."
      isCorrect: true
      explanation: "Correct. These methods help Copilot understand your intent and provide more targeted and accurate responses."
    - content: "By asking Copilot to perform large tasks at once."
      isCorrect: false
      explanation: "Incorrect. It's better to break down a large task into separate, smaller tasks for more accurate responses."
  - content: "What is the effect of maintaining a high quality bar in your code when using GitHub Copilot?"
    choices:
    - content: "Copilot latches on to your code to generate suggestions that follow the existing pattern."
      isCorrect: true
      explanation: "Correct. High quality code helps Copilot generate relevant and efficient suggestions."
    - content: "It confuses Copilot and leads to irrelevant suggestions."
      isCorrect: false
      explanation: "Incorrect. High quality code helps Copilot generate suggestions that follow the existing pattern."
    - content: "It slows down the suggestion process."
      isCorrect: false
      explanation: "Incorrect. Maintaining high quality doesn't slow down the suggestion process, but rather improves it."
  - content: "What are the two ways to generate code line completions using GitHub Copilot?"
    choices:
    - content: "Generate completions from a code line and from a code file."
      isCorrect: false
      explanation: "Incorrect. GitHub Copilot generates code line completions from a code line, but not from a code file."
    - content: "Generate completions from a comment and from a code line."
      isCorrect: true
      explanation: "Correct. GitHub Copilot can generate code line completions from a comment and from code."
    - content: "Generate completions from a comment and from a prompt."
      isCorrect: false
      explanation: "Incorrect. GitHub Copilot generates code line completions from comments, but not from a prompt. GitHub Copilot Chat generates responses from prompts."
  - content: "How does GitHub Copilot determine the code completion suggestions it provides?"
    choices:
    - content: "Based on the context of code in the editor."
      isCorrect: true
      explanation: "Correct. GitHub Copilot generates code completion suggestions based on the context of code the editor. GitHub Copilot uses the code being written and surrounding code to generate code completion suggestions."
    - content: "Based on the programming language used."
      isCorrect: false
      explanation: "Incorrect. While GitHub Copilot does support multiple programming languages, it doesn't base its suggestions solely on the language used."
    - content: "Based on the length of the code written."
      isCorrect: false
      explanation: "Incorrect. The length of the code written doesn't determine the code completion suggestions provided by GitHub Copilot."
  - content: "What happens when GitHub Copilot generates more than one code completion suggestion?"
    choices:
    - content: "It adds all of the suggestions to your code."
      isCorrect: false
      explanation: "Incorrect. GitHub Copilot doesn't add all of the suggestions to your code. Some code completion suggestions are multiline suggestions, but a multiline suggestion is one suggestion."
    - content: "It selects the most relevant suggestion automatically."
      isCorrect: false
      explanation: "Incorrect. GitHub Copilot doesn't automatically select the most relevant suggestion."
    - content: "It enables developers to review each suggestion by selecting the left or right arrows."
      isCorrect: true
      explanation: "Correct. When GitHub Copilot generates more than one suggestion, developers can cycle through the suggestions by selecting the left or right arrows."
  - content: "What types of code conversions can be completed using GitHub Copilot?"
    choices:
    - content: "Convert an entire code file, a function, or a code snippet to an image."
      isCorrect: false
      explanation: "Incorrect. GitHub Copilot doesn't have the capability to convert code snippets into images."
    - content: "Convert an entire code file, a function, or a code snippet to another programming language."
      isCorrect: true
      explanation: "Correct. GitHub Copilot can convert an entire code file, a function, or a code snippet to another programming language."
    - content: "Convert a programming language to a human language."
      isCorrect: false
      explanation: "Incorrect. GitHub Copilot isn't designed to translate programming languages into human languages."