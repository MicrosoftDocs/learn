### YamlMime:ModuleUnit
uid: learn-xamarin.use-effects-in-xamarin-forms.5-configure-an-effect-with-attached-properties
metadata:
  title: Configure an effect by using attached bindable properties
  description: Configure an effect by using attached bindable properties
  ms.date: 02/20/2024
  author: codemillmatt
  ms.author: masoucou
  ms.topic: unit
  
title: Configure an effect by using attached bindable properties
durationInMinutes: 7
content: |
  [!include[](includes/5-configure-an-effect-with-attached-properties.md)]
quiz:
    title: Check your knowledge
    questions:
    - content: "In Xamarin.Forms, which statement best describes elements such as `Button` and `Entry`?"
      choices:
      - content: "Run-time visuals that are displayed to the user"
        isCorrect: false
        explanation: "The Xamarin.Forms element types don't directly control visualization."
      - content: "Model objects that rely on native controls for their visualization"
        isCorrect: true
        explanation: "Xamarin.Forms relies on the hosting platform's UI visuals and doesn't provide the UI for elements directly."
      - content: "UI types that derive from platform-specific control classes"
        isCorrect: false
        explanation: "Elements don't use platform-specific classes as base classes."
      - content: "UI types that display only a single piece of content"
        isCorrect: false
        explanation: "The Xamarin.Forms element types don't directly control visualization."
    - content: "In Xamarin.Forms, how many effects can you apply to an element, such as a Button?"
      choices:
      - content: "None"
        isCorrect: false
        explanation: "An element allows at least one effect."
      - content: "One"
        isCorrect: false
        explanation: "An element allows more than one effect."
      - content: "Unlimited"
        isCorrect: true
        explanation: "An element can have as many effects applied to it as you need."
    - content: "In Xamarin.Forms, suppose you're writing a custom effect. It's common to create a class in the shared code that derives from RoutingEffect. You can add properties to this class to pass values from the shared code to the platform effects. What is an advantage of implementing these as attached properties rather than regular C# properties?"
      choices:
      - content: "Attached properties are easier to code than C# properties"
        isCorrect: false
        explanation: "Attached properties can be more complex to code than C# properties."
      - content: "Attached properties are more type safe than C# properties"
        isCorrect: false
        explanation: "Both property types provide the same level of type safety."
      - content: "Attached properties include built-in change notification"
        isCorrect: true
        explanation: "Xamarin.Forms notifies your effect of changes to attached properties without extra implementation details."
      - content: "Attached properties can be nullable, and C# properties can't."
        isCorrect: false
        explanation: "You can use nullable types with C# properties."
    - content: "In Xamarin.Forms, suppose you're coding a custom effect. You write a class that derives from PlatformEffect on each platform. How is your platform effect notified when one of the properties on the Xamarin.Forms element changes?"
      choices:
      - content: "You subscribe to the PropertyChanged event"
        isCorrect: false
        explanation: "Even though you can subscribe to the element's PropertyChanged event, this strategy is dangerous. You need to remember to unsubscribe from the event as well. There's a more convenient method to use."
      - content: "You override the OnElementPropertyChanged method"
        isCorrect: true
        explanation: "The OnElementPropertyChanged method is called when an element property has changed. This strategy is a safe way to observe property changes notifications from the element."
      - content: "You override the OnElementChanged method"
        isCorrect: false
        explanation: "The PlatformEffect class doesn't have an OnElementChanged method."
      - content: "You use MessagingCenter.Subscribe to register for notifications"
        isCorrect: false
        explanation: "Even though you can use MessagingCenter, the setup with this strategy can be tedious. There's a more convenient method to use."
