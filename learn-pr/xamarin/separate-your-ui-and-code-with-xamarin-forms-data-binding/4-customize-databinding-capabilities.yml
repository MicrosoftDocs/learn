### YamlMime:ModuleUnit
uid: learn-xamarin.separate-your-ui-and-code-with-xamarin-forms-data-binding.4-customize-databinding-capabilities
title: Customize data bindings with specific capabilities
durationInMinutes: 5
metadata:
  title: Customize data bindings with specific capabilities
  description: Customize data bindings with specific capabilities
  ms.date: 02/20/2024
  author: codemillmatt
  ms.author: masoucou
  ms.topic: unit
  
content: |
  [!include[](includes/4-customize-databinding-capabilities.md)]
quiz:
  title: "Knowledge check"
  questions:
  - content: "Suppose you have a page with an `Entry` and a `Label`. The label shows a list of countries/regions. When the user types in the entry field, the label's list is filtered to only things that match. For example, if the user types \"Aus\", the list shows only \"Australia\" and \"Austria\". The Page's `BindingContext` is set to an instance of `CountrySearchData`. The `Entry.Text` has a binding to the `CountrySearchData.CountryFilter` string property. Which of these techniques is most likely required in order for that binding to work as described?"
    choices:
    - content: "A one-way binding is sufficient."
      isCorrect: false
      explanation: "A one-way binding would only copy to the UI `Entry.Text`, but wouldn't capture changes by the user."
    - content: "A two-way binding."
      isCorrect: true
      explanation: "A two-way binding is needed to send user input to the `CountryFilter` property. Two-way bindings are the default for `Entry.Text`, so specifying it isn't necessary."
    - content: "The source object needs to implement `INotifyPropertyChanged`."
      isCorrect: false
      explanation: "The interface isn't required for this setup to function correctly."
  - content: "What behavior does implementing `INotifyPropertyChanged` on your data objects enable?"
    choices:
    - content: "Updates to the UI when code-behind data changes."
      isCorrect: true
      explanation: "The `PropertyChanged` event from `INotifyPropertyChanged` informs the binding that the code-behind data has changed. This event signals to the binding that it should update the UI."
    - content: "Updates to the UI when the `BindingContext` changes."
      isCorrect: false
      explanation: "Bindings automatically monitor for changes to `BindingContext`."
    - content: "Updates to the code-behind data objects when the UI changes."
      isCorrect: false
      explanation: "`INotifyPropertyChanged` is implemented on data objects, it doesn't monitor UI changes."
