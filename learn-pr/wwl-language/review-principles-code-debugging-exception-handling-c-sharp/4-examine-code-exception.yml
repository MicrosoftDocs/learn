### YamlMime:ModuleUnit
uid: learn.wwl.review-principles-code-debugging-exception-handling-c-sharp.examine-code-exception
title: Examine exceptions and how exceptions are used
metadata:
  title: Examine exceptions and how exceptions are used
  description: "Examine exceptions and how exceptions are used"
  ms.date: 02/22/2024
  author: wwlpublish
  ms.author: cahowd
  ms.topic: unit
durationInMinutes: 6
content: |
  [!include[](includes/4-examine-code-exception.md)]
quiz:
  title: "Check your knowledge"
  questions:
  - content: "What is the purpose of catching an exception in C#?"
    choices:
    - content: "To ignore errors that occur in a program."
      isCorrect: false
      explanation: "Incorrect. Exceptions should be handled in code to correct error conditions if possible."
    - content: "To take corrective action when an error occurs in a program."
      isCorrect: true
      explanation: "Correct. The purpose of catching an exception is to take corrective action when an error occurs."
    - content: "To generate additional errors in a program."
      isCorrect: false
      explanation: "Incorrect. Exceptions can be thrown when an issue or error is detected, but exceptions are not a tool for adding errors to an application."
  - content: "Can a developer access the contents of an exception at runtime?"
    choices:
    - content: "No, exceptions can never be accessed."
      isCorrect: false
      explanation: "Incorrect. Exceptions are objects that can be accessed."
    - content: "Yes, exceptions can be accessed and used to take corrective action."
      isCorrect: true
      explanation: "Correct. Exceptions are objects that can be accessed. The properties of an exception can be used to help determine corrective action."
    - content: "Exceptions can be accessed, but not during the application runtime."
      isCorrect: false
      explanation: "Incorrect. Exceptions are objects that can be accessed at runtime."
  - content: "What happens when execution of a C# application results in a system error?"
    choices:
    - content: "The program crashes and closes."
      isCorrect: false
      explanation: "Incorrect. An exception is thrown when a system error occurs. If the exception is caught and handled, execution will continue normally."
    - content: "An exception is created and thrown by the .NET runtime."
      isCorrect: true
      explanation: "Correct. The .NET runtime throws an exception when a C# application generates a system error."
    - content: "The error is silently ignored and the program continues to run."
      isCorrect: false
      explanation: "Incorrect. The .NET runtime throws an exception and the application will be shut down if the exception isn't caught."
  - content: "What is the relationship between the type of exception and the information it contains?"
    choices:
    - content: "The type of exception and the information it contains are unrelated."
      isCorrect: false
      explanation: "Incorrect. Properties of the exception object contain information related to the exception type."
    - content: "The type of exception determines the information it contains."
      isCorrect: true
      explanation: "Correct. The type of exception determines the information it contains."
    - content: "The information contained in an exception determines the type of exception."
      isCorrect: false
      explanation: "Incorrect. The exception type determines what information the exception contains, not the other way around."