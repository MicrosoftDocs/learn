### YamlMime:ModuleUnit
uid: learn.wwl.develop-ai-agent-with-semantic-kernel.knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: This unit contains a knowledge check which can help learners reinforce their understanding of the material.
  author: buzahid
  ms.author: buzahid
  ms.date: 09/26/2025
  ms.topic: unit
durationInMinutes: 3
content: |
quiz:
  questions:
  - content: "What are the key steps to create an Azure AI Foundry Agent using the Microsoft Agent Framework?"  
    choices:  
      - content: "Deploy a custom AI model before creating an agent definition in the Azure portal."  
        isCorrect: false  
        explanation: "Incorrect. Azure AI Foundry Agents use existing deployed models and don't require custom model deployment or portal configuration." 
      - content: "Initialize the agent by defining an LLM model in the `AgentThread` constructor."  
        isCorrect: false  
        explanation: "Incorrect. The `ChatAgent` specifies the model through the client, not the thread constructor."   
      - content: "Create an `AzureAIAgentClient`, define a ChatAgent with instructions and tools, and create an `AgentThread` for conversations."  
        isCorrect: true   
        explanation: "Correct. These are the essential components needed to create a functional Azure AI Foundry Agent that can handle conversations and use tools."  
  - content: "Which component in the Microsoft Agent Framework manages conversation state and stores messages?"  
    choices:  
      - content: "AgentThread"  
        isCorrect: true  
        explanation: "Correct. `AgentThread` automatically maintains conversation history between agents and users, managing the conversation state across multiple interactions."  
      - content: "ChatAgent"  
        isCorrect: false  
        explanation: "Incorrect. `ChatAgent` is the main agent class that handles conversations, but AgentThread specifically manages the conversation history and context."  
      - content: "AzureAIAgentClient"  
        isCorrect: false  
        explanation: "Incorrect. `AzureAIAgentClient` manages the connection to Azure AI Foundry projects but doesn't handle conversation state."  
  - content: "How do you add custom functionality to an Azure AI Foundry Agent in the Microsoft Agent Framework?"  
    choices:  
      - content: "Configure custom functions in the Azure portal and link them to the agent through connection strings."  
        isCorrect: false  
        explanation: "Incorrect. Custom tools are defined programmatically in code, not configured through the Azure portal."  
      - content: "Create Python functions with proper type annotations and descriptions, then pass them to the ChatAgent's tools parameter."  
        isCorrect: true  
        explanation: "Correct. Custom tools are created as regular Python functions with type annotations and Field descriptions, then registered with the agent through the tools parameter."
      - content: "Modify the AI model's architecture to integrate the custom functionality directly."  
        isCorrect: false  
        explanation: "Incorrect. Tools work through function calling and don't require modifications to the AI model itself."