### YamlMime:ModuleUnit
uid: learn.github.merge-conflict-resolution-github.4-knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: Check your knowledge about merge conflict resolution.
  ms.date: 06/26/2020
  author: a-a-ron
  ms.author: aastewar
  ms.topic: unit
durationInMinutes: 3
content: |
  [!include[](includes/4-knowledge-check.md)]
quiz:
  title: Check your knowledge
  questions:
  - content: "Which of the following statements about merges is **false**?"
    choices:
    - content: "Files added on the compare branch can be merged into the base branch if they don't yet exist there."
      isCorrect: false
      explanation: "These new files can be merged."
    - content: "Edits to lines of code on the compare branch can be merged if those same lines aren't changed on the base branch since the compare branch was last pulled."
      isCorrect: false
      explanation: "These edits can be merged."
    - content: "When a merge completes successfully, it ensures that your changes didn't break the build."
      isCorrect: true
      explanation: "This statement is incorrect. It's possible that the combination of your successfully merged changes, when combined with recent base branch changes, could produce a codebase that doesn't build. It's a best practice to pull and test immediately before merging."
  - content: "Why are merge conflicts bad?"
    choices:
    - content: "The base branch becomes unstable until the conflicts are resolved. As a result, associated builds probably can't succeed."
      isCorrect: false
      explanation: "When a merge conflict happens, the merge is rejected and the base branch is unchanged. The branch developer merges the differences into their branch before retrying the upstream merge."
    - content: "This question is a trick. Merge conflicts aren't bad; they're an inevitable part of distributed version control."
      isCorrect: true
      explanation: "As projects scale, the probability of multiple people changing the same files grows. Merge conflicts are raised to avoid code being unintentionally overwritten."
    - content: "Merge conflicts are embarrassing for the offending developer because everyone thinks they were careless."
      isCorrect: false
      explanation: "Every developer encounters merge conflicts at some point because there are many ways they can happen. For example, the base branch might change after you create your pull request."
  - content: "What is the best way to avoid most complex merge conflicts?"
    choices:
    - content: "Regularly pull updates your branch."
      isCorrect: true
      explanation: "You might need to resolve conflicts each time, but they should be smaller and more straightforward."
    - content: "Only pull updates for the base branch onto your branch immediately before creating a pull request."
      isCorrect: false
      explanation: "While it's a good practice to pull updates immediately prior to creating a pull request, you still run the risk of that single, final pull producing challenging merge conflicts."
    - content: "Open a pull request as soon as you create your branch. This transparency helps everyone else understand your proposed changes so they don't merge any competing code before you do."
      isCorrect: false
      explanation: "This solution might be a tough sell to the rest of the team. Let's consider this plan B for now."
