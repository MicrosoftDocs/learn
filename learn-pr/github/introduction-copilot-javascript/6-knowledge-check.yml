### YamlMime:ModuleUnit
uid: learn.github-copilot-with-javascript.knowledge-check
title: Module assessment
metadata:
  title: Module assessment
  description: Review the differences in GitHub Copilot and Prompt engineering
  author: abrilurena
  ms.author: abrilu
  ms.date: 08/12/2024
  ms.topic: unit
  ms.collection:
    - ce-advocates-ai-copilot
  ms.custom: devx-track-js
durationInMinutes: 5
content: |
quiz:
  questions:
  - content: "How does GitHub Copilot work?"
    choices:
    - content: "GitHub Copilot uses the prompts that you write in natural language text, to provide suggestions based on what you type."
      isCorrect: true
      explanation: "Correct! GitHub Copilot is trained on billions of lines of code. It turns natural language prompts into coding suggestions across dozens of languages."
    - content: "GitHub Copilot uses flashing lights to instruct you what to type."
      isCorrect: false
      explanation: "GitHub Copilot uses the prompts that you write in natural language text, to provide suggestions based on what you type."
    - content: "GitHub Copilot accepts prompts written in radio language, and provides suggestions based on what you type."
      isCorrect: false
      explanation: "GitHub Copilot doesn't use radio language."
  - content: "What are some features of GitHub Copilot Free?"
    choices:
    - content: "It's a free unrestricted AI tool that works independent of code editors."
      isCorrect: false
      explanation: "Incorrect. GitHub Copilot Free has a quota for code completions and chat messages."
    - content: "It provides several suggestions and chats per month directly in your IDE and on github.com."
      isCorrect: true
      explanation: "Correct. It also supports multi-file editing and switching models!"
    - content: "It provides an option to enable slower responses, preserving your Copilot Pro quota."
      isCorrect: false
      explanation: "Incorrect. Copilot Free has quota restrictions. Copilot Pro provides unlimited code suggestions and chat."
  - content: "How can you accept GitHub Copilot's suggestions?"
    choices:
    - content: "Press the `Tab` key."
      isCorrect: true
      explanation: "Copilot offers you a suggestion, which appears as grey code if you use black as your text color. To accept the suggestion, you need to press the `Tab` key."
    - content: "Press `F1` key."
      isCorrect: false
      explanation: "False. This option doesn't work to accept GitHub Copilot suggestions."
    - content: "Press `F4` key."
      isCorrect: false
      explanation: "False. This option doesn't work to accept GitHub Copilot suggestions."
  - content: "Identify which statement is valid and select the correct answer:"
    choices:
    - content: "A prompt, which is our output, is a collection of songs that tells GitHub Copilot what to generate."
      isCorrect: false
      explanation: "False. A prompt isn't a collection of songs."
    - content: "A prompt, which is our input, is a collection of instructions or guidelines that tell GitHub Copilot what to generate."
      isCorrect: true
      explanation: "A prompt is crucial in eliciting specific responses from Copilot. The prompt might be a comment that steers Copilot to generate code on your behalf or writing code that Copilot autocompletes."
    - content: "A prompt, which is a separate document, is a collection of instructions that tells GitHub Copilot what to generate."
      isCorrect: false
      explanation: "False. A prompt isn't a separate document full of instructions that tells GitHub Copilot what to generate."
  - content: "What does the quality of GitHub Copilot output depend on?"
    choices:
    - content: "Your code editor."
      isCorrect: false
      explanation: "Not correct. It depends on how well you detailed your prompt."
    - content: "How well your extensions were installed."
      isCorrect: false
      explanation: "False. It doesn't depend on how well your extensions were installed."
    - content: "How well you crafted your prompt."
      isCorrect: true
      explanation: "Designing an effective prompt is crucial to ensuring that you achieve your desired output from GitHub Copilot. You need to detail your prompt as much as possible."
