### YamlMime:ModuleUnit
uid: learn.github.introduction-to-github.4-knowledge-check
title: Module assessment
metadata:
  title: Module assessment
  description: Check what you've learned.
  ms.date: 09/12/2024
  author: a-a-ron
  ms.author: aastewar
  ms.topic: unit
durationInMinutes: 3
content: |
  [!include[](includes/7-knowledge-check.md)]
quiz:
  title: Check your knowledge
  questions:
  - content: "What is the best way to report a bug to a GitHub project?"
    choices:
    - content: "Send an email to a project owner."
      isCorrect: false
      explanation: "Emails don't benefit from the issue-management infrastructure provided by GitHub."
    - content: "I don't bother reporting software bugs because there's no transparency, and they never get fixed anyway."
      isCorrect: false
      explanation: "GitHub provides great infrastructure for reporting, managing, and tracking bugs as issues. As a result, it's easy for the project's community to offer a resolution one way or another."
    - content: "Search for the bug in the project's existing issues, and create a new one if it hasn't been reported yet."
      isCorrect: true
      explanation: "A project's issues are visible to anyone who has access to the project, so you might find a resolution is already planned or available. Otherwise, you can create and track the issue yourself."
  - content: "Suppose you created a bug fix on a new branch and want it to become part of the next production build generated from the `main` branch. What should you do next?"
    choices:
    - content: "Copy your branch changes and commit them directly to the `main` branch."
      isCorrect: false
      explanation: "If you have your commits already in place on a new branch as recommended, you should create a pull request to merge them in to the `main` branch."
    - content: "Create a pull request to merge your new branch into the `main` branch."
      isCorrect: true
      explanation: "Pull requests are the correct way to communicate that commits are ready for review and ultimate inclusion on the `main` branch."
    - content: "On second thought, maybe I won't share this fix. I'll just put it in my own private version of the source code."
      isCorrect: false
      explanation: "You should reconsider offering your contribution to the original project. By getting your bug fix merged into the `main` branch, you'll benefit from it being automatically included in future builds."
  - content: "Suppose you'd like to work with a project on GitHub, but you don't have write access to the project. What can you do to contribute?"
    choices:
    - content: "Fork the project's repository to your GitHub account, clone the forked repository to your local machine, push changes to your repository, and submit a pull request to the target (upstream) repository."
      isCorrect: true
      explanation: "GitHub provides forking functionality designed to allow you to work with projects where you aren't an owner or don't have write access. Forking makes a remote copy of the project in your repository that you can then clone locally. To submit updates to the target repository (upstream repository), you can submit a pull request."
    - content: "Clone the project to your local machine and push updates directly to the project repository."
      isCorrect: false
      explanation: "You can't push updates to a repository unless you're the owner or have write access."
    - content: "Use git commands to make a copy of the project so that you can work locally. Submit an issue to get your changes into the target repository."
      isCorrect: false
      explanation: "Although you can clone the target repository to your local machine, you won't be able to push any changes back to it without write access. That's why GitHub provides forking functionality. Although you could submit an issue to the project's repository, using GitHub's fork workflow provides a much better way to contribute to a project."
