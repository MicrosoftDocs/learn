### YamlMime:ModuleUnit
uid: learn.codebase-representation-codeql.6-knowledge-check
title: Module assessment
metadata:
  unitType: knowledge_check
  title: Module assessment
  description: Check your knowledge about CodeQL.
  ms.date: 04/08/2024
  author: rmcmurray
  ms.author: robmcm
  ms.topic: unit
durationInMinutes: 10
content: |
quiz:
  questions:
  - content: "What does CodeQL first do when you're creating a database?"
    choices:
    - content: "Analyzes both compiled languages and interpreted languages."
      isCorrect: false
      explanation: "Incorrect. Extraction of compiled languages works by monitoring the normal build process and interpreted languages. The extractor runs directly on the source code, so these two different approaches aren't the first step for CodeQL when you're creating a database."
    - content: "Extracts a single relational representation of each source file."
      isCorrect: true
      explanation: "Correct. For database creation, CodeQL first extracts a single relational representation of each source file in the codebase."
    - content: "Converts results produced during query execution into a meaningful form."
      isCorrect: false
      explanation: "Incorrect. The final step converts results produced during query execution into a form that's more meaningful in the context of the source code."
  - content: "What is the format of the command for creating and analyzing a CodeQL database from the CLI?"
    choices:
    - content: "`codeql [command] [subcommand]`"
      isCorrect: true
      explanation: "Correct. The CodeQL CLI includes this command to create and analyze CodeQL databases from the command line."
    - content: "`codeql [subcommand] [command]`"
      isCorrect: false
      explanation: "Incorrect. `[subcommand]` doesn't come before `[command]` to create and analyze a CodeQL database from the CLI."
    - content: "`[command] [subcommand] codeql`"
      isCorrect: false
      explanation: "Incorrect. `codeql` needs to appear at the beginning of the command."
  - content: "What is an extractor?"
    choices:
    - content: "A hierarchical representation of the code."
      isCorrect: false
      explanation: "Incorrect. The database contains a full, hierarchical representation of the code. The representation includes the abstract syntax tree, the data-flow graph, and the control-flow graph."
    - content: "A representation of the abstract syntax tree."
      isCorrect: false
      explanation: "Incorrect. The database contains a full, hierarchical representation of the code. The representation includes the abstract syntax tree, the data-flow graph, and the control-flow graph."
    - content: "A tool that produces the relational data."
      isCorrect: true
      explanation: "Correct. An extractor is a tool that produces the relational data and source reference for each input file, from which a CodeQL database can be built."
  - content: "The CLI's built-in search operations do which of the following?"
    choices:
    - content: "They automatically look in parent directories for the files used in database creation and analysis."
      isCorrect: false
      explanation: "Incorrect. The operations search siblings, not the parent directories."
    - content: "When they're manually prompted, they look in sibling directories for the files used in database creation and analysis."
      isCorrect: false
      explanation: "Incorrect. A manual prompt doesn't occur, because this action is automatic."
    - content: "They automatically look in all the sibling directories for the files used in database creation and analysis."
      isCorrect: true
      explanation: "Correct. The CLI's built-in search operations automatically look in all the sibling directories for the files used in database creation and analysis."
  - content: "By default, which severity level causes a pull-request check failure during code scanning?"
    choices:
    - content: "`Error`"
      isCorrect: true
      explanation: "Correct. By default, only alerts that have a severity level of `Error` or a security severity level of `Critical` or `High` cause a pull-request check failure. A check still succeeds with alerts of lower severities."
    - content: "`Warning`"
      isCorrect: false
      explanation: "Incorrect. `Warning` is a setting, not a severity level."
    - content: "`Medium`"
      isCorrect: false
      explanation: "Incorrect. `Medium` is a setting, not a severity level."
  - content: "Which is one way to optimize CodeQL analysis runtimes?"
    choices:
    - content: "Analyze multiple languages."
      isCorrect: false
      explanation: "Incorrect. Analyzing multiple languages might slow down CodeQL analysis runtimes."
    - content: "Increase the memory."
      isCorrect: true
      explanation: "Correct. Increasing the memory helps optimize CodeQL analysis runtimes."
    - content: "Increase the amount of code analyzed."
      isCorrect: false
      explanation: "Incorrect. Increasing the amount of code analyzed might slow down CodeQL analysis runtimes."
