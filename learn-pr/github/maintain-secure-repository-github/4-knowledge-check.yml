### YamlMime:ModuleUnit
uid: learn.github.maintain-secure-repository-github.4-knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: Check what you've learned.
  ms.date: 11/14/2023
  author: a-a-ron
  ms.author: aastewar
  ms.topic: unit
durationInMinutes: 3
content: |
  [!include[](includes/4-knowledge-check.md)]
quiz:
  title: Check your knowledge
  questions:
  - content: "What's the best way to make sure you're integrating the most secure versions of your project dependencies?"
    choices:
    - content: "Configure your package files to always use the latest versions of dependencies."
      isCorrect: false
      explanation: "This practice is generally a bad idea because it can introduce breaking changes or unexpected behavior in your software."
    - content: "Check each project's security details closely before adding it to your dependencies by confirming its version status across multiple advisory sites."
      isCorrect: false
      explanation: "Even if this practice helps you start off with a secure version of a given dependency, it won't ensure that you're safe from future vulnerabilities. You would need to constantly monitor every package to ensure compliance, which might be infeasible."
    - content: "Enable **Dependabot** for your repository."
      isCorrect: true
      explanation: "Dependabot scans your repository's dependency manifests and notifies you via pull request whenever a version you rely is marked as insecure."
  - content: "Suppose one of your source projects relies on secrets kept in a folder called `.secrets`. You would like to make sure that the files kept in this folder on development machines aren't inadvertently committed to the repository. Which of these files best helps enforce this policy?"
    choices:
    - content: "`SECURITY.md`"
      isCorrect: false
      explanation: "`SECURITY.md` is used to explain the security policy of your project to consumers and contributors, but it doesn't automate anything."
    - content: "`.gitignore`"
      isCorrect: true
      explanation: "`.gitignore` can be used to help enforce which files are included in commits by tools that respect it. However, the client enforces this policy and doesn't necessarily prevent users from committing files that violate policy."
    - content: "`CONTRIBUTING.md`"
      isCorrect: false
      explanation: "`CONTRIBUTING.md` is used to explain the contribution policy of your project, but it doesn't automate anything."
  - content: "What does secret scanning do?"
    choices:
    - content: "Looks for known secrets or credentials committed within the repository."
      isCorrect: true
      explanation: "This approach is done to prevent the use of fraudulent behavior and to secure the integrity of any sensitive data."
    - content: "Analyzes and finds security vulnerabilities and errors in the code in a GitHub repository."
      isCorrect: false
      explanation: "Secret scanning is used to analyze and find security vulnerabilities and errors in the code in a GitHub repository, not secret scanning."
    - content: "Secret scanning uses CodeQL to query your code as data."
      isCorrect: false
      explanation: "Incorrect. That's code scanning again, not secret scanning."
