### YamlMime:ModuleUnit
uid: learn.github.search-organize-repository-history-github.6-knowledge-check
title: Module assessment
metadata:
  title: Module assessment
  description: Check what you've learned.
  ms.date: 01/02/2025
  author: a-a-ron
  ms.author: aastewar
  ms.topic: unit
  module_assessment: true
durationInMinutes: 3
content: |
  [!include[](includes/6-knowledge-check.md)]
quiz:
  title: Check your knowledge
  questions:
  - content: "How does GitHub's top-level search bar differ from the search options available on repository tabs?"
    choices:
    - content: "Other than being located in different parts of the user interface, they're otherwise the same."
      isCorrect: false
      explanation: "They offer different user experiences due to their scoping."
    - content: "They support different filter syntax options."
      isCorrect: false
      explanation: "They support the same filter syntax model."
    - content: "The top-level search bar supports searching everything across all of GitHub, whereas the repository tab searches are scoped to cover specific types in the current repository."
      isCorrect: true
      explanation: "The top-level search allows the most flexibility, whereas the scoped tab searches provide popular filter dropdowns for easier refinement."
  - content: "What does `git blame` do?"
    choices:
    - content: "It creates a bug assigned to the last person who committed changes to the specified file."
      isCorrect: false
      explanation: "`git blame` is used to display file commit history."
    - content: "It displays the commit history of the file."
      isCorrect: true
      explanation: "Despite the accusatory name, `git blame` is just a command to display commit history."
    - content: "It reverts the effects of a `git praise` command."
      isCorrect: false
      explanation: "In some systems, `git praise` is a friendlier alias for the `git blame` command."
  - content: "Suppose a bug issue is reported on your project, and you know which pull request introduced the problem. Which of the following options is **not** a cross-linking best practice?"
    choices:
    - content: "Don't create cross-links when the root cause of the issue is already known."
      isCorrect: true
      explanation: "It's a good practice to always add cross-links in case you or someone else needs the context later on."
    - content: "Add a comment to the bug report that includes the pull request's author by using an @mention."
      isCorrect: false
      explanation: "This linking is a good practice, assuming the author is available to support the issue."
    - content: "Add a comment to the bug report that links the pull request to it using the #ID syntax."
      isCorrect: false
      explanation: "This linking is a good practice as it provides transparency to the issue author and anyone who might end up working on it."
  - content: "Which of the following is a valid reason to pin an issue in your repository?"
    choices:
    - content: "To prevent the issue from being edited by other users."
      isCorrect: false
      explanation: "Pinning doesnâ€™t affect edit permissions; it simply highlights the issue."
    - content: "To keep high-priority or frequently referenced issues at the top of the Issues tab."
      isCorrect: true
      explanation: "Pinning helps improve visibility for important issues."
    - content: "To automatically assign the issue to the repository owner."
      isCorrect: false
      explanation: "Pinning does not assign or automate ownership."
  - content: "Which keyword in a pull request description will automatically close a linked issue when the pull request is merged?"
    choices:
    - content: "`#42 linked`"
      isCorrect: false
      explanation: "The correct syntax includes a keyword like `Fixes` followed by the issue number."
    - content: "`Fixes #42`"
      isCorrect: true
      explanation: "`Fixes #42` is one of the supported keywords that automatically closes the linked issue."
    - content: "`Update issue 42`"
      isCorrect: false
      explanation: "This does not follow the recognized keyword format used by GitHub."

      
