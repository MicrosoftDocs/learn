### YamlMime:ModuleUnit
uid: learn.azure.debug-nodejs.7-knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: Check what you've learned.
  author: GitHubber17
  ms.author: chnoring
  ms.date: 06/01/2023
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
  ms.custom: team=nextgen, team=cloud_advocates
  ms.contributors: yolasors-11052021
durationInMinutes: 2
quiz:
  title: Check your knowledge
  questions:
    - content: "How do you run Node.js with inspect mode enabled?"
      choices:
        - content: "With the command `node inspect myscript.js`"
          isCorrect: false
          explanation: "Incorrect. This command starts your program with the built-in debugger."
        - content: "With the command `node --inspect myscript.js`"
          isCorrect: true
          explanation: "Correct. Use the `--inspect` option to allow debugger clients to connect to the Node.js process."
        - content: "With the command `node myscript.js"
          isCorrect: false
          explanation: "Incorrect. For security reasons, the use of the debugger must be enabled explicitly when you run Node.js."
        - content: "By entering `debug` in the Node.js REPL"
          isCorrect: false
          explanation: "Incorrect. A debugger can only be used on an existing program and doesn't work in the REPL environment."
    - content: "How can you make a debugger pause the execution of your program on a specific line of code?"
      choices:
        - content: "With the command `node --inspect-brk myscript.js`"
          isCorrect: false
          explanation: "Incorrect. This command runs Node.js in inspect and pause execution before your program code."
        - content: "By stepping through your code until you reach the wanted line"
          isCorrect: false
          explanation: "Incorrect. This technique might work for small programs, but it's not practical if you have thousands of lines of code."
        - content: "By commenting out unwanted code"
          isCorrect: false
          explanation: "Incorrect. Commenting out code can alter your program behavior and doesn't help you pause the execution."
        - content: "By setting a breakpoint in your code"
          isCorrect: true
          explanation: "Correct. When you use a debugger, you can use breakpoints to pause execution at specific points in your code."
    - content: "What's the preferred way to print information in the console during debugging?"
      choices:
        - content: "With a breakpoint"
          isCorrect: false
          explanation: "Incorrect. A breakpoint allows you to pause execution but not print information in the console."
        - content: "By adding a `console.log()` call in my code"
          isCorrect: false
          explanation: "Incorrect. This technique will work, but it's not the best method because you alter your program by doing this and you might forget to remove it before shipping to production."
        - content: "With a logpoint"
          isCorrect: true
          explanation: "Correct. A logpoint allows you to display information in the console while debugging, without altering your code."
        - content: "By watching a variable"
          isCorrect: false
          explanation: "Incorrect. When you watch a variable, you see its value at all times during debugging in the Watch panel, not in the Debug console."
